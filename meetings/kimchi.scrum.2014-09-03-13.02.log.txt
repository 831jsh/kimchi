13:02:24 <alinefm> #startmeeting
13:02:24 <kimchi-bot> Meeting started Wed Sep  3 13:02:24 2014 UTC.  The chair is alinefm. Information about MeetBot at http://wiki.debian.org/MeetBot.
13:02:24 <kimchi-bot> Useful Commands: #action #agreed #help #info #idea #link #topic.
13:02:25 <alinefm> #meetingname scrum
13:02:25 <kimchi-bot> The meeting name has been set to 'scrum'
13:02:39 <alinefm> #info Agenda 1) Status 2) Open discussion
13:02:39 <alinefm> anything else?
13:03:48 <royce> Good for me
13:04:31 <alinefm> #topic Status
13:04:32 <alinefm> #info Please provide your status using the #info command: #info <nickname> <status>
13:06:08 <royce> #info royce finished volume create dispatcher(merged) and implementation of storage volume upload(waiting for review)
13:06:13 <alinefm> #info alinefm sent patch to use the same XML structure while attaching a new iSCSI volume or creating a VM from an iSCSI volume
13:06:20 <vianac> #info vianac sent another set of download storage volume patches (including the async change part); reviewed mailing list patches
13:06:31 <alinefm> #info alinefm sent patch to centralize graphics information in one data structure
13:06:34 <wenwang> #info wenwang Researching about the Asynchronous event notify
13:06:47 <alinefm> #info alinefm sent patches to fix plugin tests
13:07:15 <alinefm> #info alinefm sent patches to discover kimchi peers using openSLP
13:07:32 <alinefm> #info alinefm sent patch to fix UI while listing storage volumes in Storage tab
13:07:55 <royce> #info royce is investigating  big file direct upload
13:08:39 <alinefm> #info alinefm sent patches to support async task query classification (waiting review)
13:09:47 <alinefm> royce, the upload patches you sent this morning are ready? I mean, which tests and so?
13:10:01 <alinefm> vianac, when do you plan to send the download patches for review?
13:10:15 <vianac> alinefm, today
13:10:32 <alinefm> YuXin, any update about the upload/download UI?
13:11:13 <YuXin> hong liang is working on that with Royce today
13:11:33 <royce> alinefm, yes, sent with mockmodel tests, I've tested the model part with previously demo UI
13:11:57 <alinefm> royce, YuXin, do you know when the UI will be ready?
13:12:19 <royce> hongliang said he will finish it tomorrow
13:12:39 <alinefm> ok
13:12:41 <alinefm> https://github.com/kimchi-project/kimchi/wiki/todo-1.3
13:13:01 <royce> BTW, people are asking about the image template UI
13:13:59 <alinefm> today is the last devel day before the stabilization phase for 1.3 release
13:14:07 <alinefm> and just a few tasks are already merged
13:14:15 <alinefm> royce, we will need to postpone it =/
13:14:40 <alinefm> from the time, I only expect to have upload/download tasks (backend and UI) done
13:15:01 <alinefm> we can wait by this Friday to get them merged before code freeze
13:15:29 <alinefm> all other tasks will be moved back to backlog so we can devel them for the Dec release
13:15:32 <alinefm> sounds good?
13:17:06 <baude> #info baude reworking the edit vm functions to recreated the xml format each time a change is made. also provides ability to clone vms
13:17:10 <alinefm> YuXin, how much time do you think it is needed to do the img template UI ?
13:17:38 <YuXin> it is just create a template with an installed image?
13:17:57 <alinefm> YuXin, from a .img file instead of an ISO file
13:18:14 <YuXin> backend already ready?
13:18:20 <alinefm> yeap
13:18:26 <royce> YuXin yes, merged last sprint
13:18:54 <YuXin> the image file is supplied by user with a url  or file path?
13:19:16 <royce> YuXin, a file path, just like ISO do
13:19:37 <royce> but url would not be problem I suppose
13:19:48 <alinefm> YuXin, royce, we can do the same as local ISO - previous list the .img files in the pools and provide a input box for custom path
13:20:07 <YuXin> so only support file path, right?
13:20:12 <alinefm> yes
13:20:16 <royce> yes
13:20:34 <YuXin> I will look into it tomorrow and will try my best to get it done within this Friday
13:21:15 <royce> alinefm, that is what I'm thinking about,  just one problem of that is we need to filter image using by vm
13:21:17 <alinefm> thank you very much! =)
13:21:30 <alinefm> royce, why?
13:21:51 <alinefm> as the backend uses backingstore a new vm can share the same base img
13:22:06 <royce> if a vm is using a img, and it becomes the base of other vm
13:22:34 <YuXin> to me, the image is read-only, right?
13:22:54 <royce> alinefm, I didn't do the logic of making current vm img convert to base part as you do in vm->template
13:23:17 <alinefm> oh ok
13:23:19 <royce> YuXin, yes
13:23:20 <alinefm> so we need to filter
13:23:35 <alinefm> the ref_count can be used for it, right?
13:23:42 <royce> yes, alinefm
13:23:50 <YuXin> looks like server side filter, right?
13:24:12 <royce> it just covers we download a cloud image from net (as openstack do), and we gen vm from it
13:24:35 <royce> YuXin, you can just use ref_cnt = 0 to filter it
13:24:51 <YuXin> ?a parameter in API
13:24:55 <alinefm> royce, but doing it for each pool can take a long time
13:24:55 <royce> yes
13:24:59 <YuXin> ok
13:25:08 <YuXin> discuss details with you tomorrow
13:25:12 <YuXin> VM ticket: update novnc/spice code (sheldon)
13:25:26 <royce> alinefm, do you mean query ref_cnt takes long time?
13:25:27 <YuXin> backend of this also merged, right?
13:25:43 <alinefm> YuXin, yes
13:26:00 <alinefm> royce, GET /storagepools/<name>/storagevolumes?ref_count=0
13:26:12 <alinefm> you will need to run it ^ for each pool, right?
13:26:35 <royce> We first select a pool
13:27:03 <alinefm> royce, the shallow scan does not select a pool - it searches in all active pools
13:27:19 <alinefm> I thought in do the same but for .img files
13:27:55 <YuXin> is it the one to set console password and we already designed it to make it an item in general tab of vm edit?
13:27:59 <royce> I'm not sure we do the same....
13:28:10 <royce> Because there is a limitation of libguestfs
13:28:30 <royce> it takes time for libguestfs to read the img file to make distro disicsion...
13:28:55 <alinefm> YuXin, it is one part! the other one is pass "password=" to the console URL
13:29:08 <royce> If we query every img it'll take long time
13:29:11 <alinefm> simon has sent a patch for the first part but havent sent the v2
13:29:48 <YuXin> so backend of the 1st part already merged?
13:30:08 <alinefm> royce, so your suggestion is have a combobox with the storage pools listed, once user hit it we list in a second combobox the storage volumes with ref_count = 0
13:30:23 <alinefm> royce, and in a second option, an input box to input a path
13:30:23 <alinefm> ?
13:30:28 <alinefm> YuXin, yes
13:30:49 <YuXin> I think we can get UI of the 1st part to be implemented
13:31:01 <royce> Yes, I guess so, or we just expose ootb pool for img query
13:31:04 <YuXin> if no password, then when lauch console, it will work
13:31:11 <alinefm> YuXin, you can focus first in img template and I will take a look on the password UI
13:31:24 <alinefm> as it has a version on ML I can apply the comments and resend
13:31:26 <YuXin> if password is set, when lauch console, user need to input a password manually, is that acceptable
13:32:22 <alinefm> yes
13:32:31 <YuXin> ok
13:32:34 <alinefm> this is how it is today
13:33:14 <YuXin> aline, you can work on the password, if any difficulty, let  me know
13:33:35 <alinefm> make sure I will =)
13:33:52 <alinefm> any other task to discuss?
13:34:38 <YuXin> pci passthrough will be deferred?
13:35:28 <alinefm> yes
13:35:36 <YuXin> Asynchronous event notify（WenWang）
13:35:47 <alinefm> zheng zhou still needs to do some tests on RHEL
13:35:51 <YuXin> aline, for this one, you have a backend patch out, right?
13:36:11 <alinefm> yes - my patch is for task classification
13:36:19 <alinefm> it is not related to async event notify
13:36:28 <alinefm> but we can use it to solve the tasks issues we are having
13:36:28 <YuXin> ok
13:36:36 <alinefm> until get the asyn event done
13:36:42 <YuXin> ok
13:37:13 <alinefm> the idea is while loading the UI run: GET /tasks?status=running&target_uri=<URI>
13:37:39 <alinefm> for example for debugreports: /tasks?status=running&target_uri=/debugreports (need to encode)
13:37:48 <wenwang> alinefm: What's the plan of the async task
13:38:04 <alinefm> so we can list all those debugreports in progress with the loading icon
13:38:12 <wenwang> alinefm: Is thiis a workaround?
13:38:31 <alinefm> wenwang, yes
13:38:39 <alinefm> until we get async event done
13:38:51 <alinefm> I think it is easy to do then async event
13:38:55 <alinefm> *than
13:39:22 <royce> :)yes
13:39:28 <wenwang> alinefm: And it's working for the tasks that need to be asynchronised, right?
13:39:47 <alinefm> yes
13:40:20 <wenwang> alinefm: Is the offering of doing the real async task job still on our work plan in the next release?
13:41:24 <alinefm> yes
13:42:00 <wenwang> Great!
13:43:16 <alinefm> shall we move on to open discussion ?
13:43:48 <alinefm> #topic Open Discussion
13:44:10 <alinefm> hopefully we get merged more patches by Friday
13:44:24 <alinefm> and then it is a code freeze - only bug fixes will be merged until the 1.3 GA
13:44:39 <alinefm> so we need to focus on tests and tests and bug fixes
13:45:06 <alinefm> we have a bunch of bugs in github - so feel free to get any one to work on
13:45:24 <alinefm> I also would like to have a person responsible for each distro (the same we did last release)
13:45:30 <alinefm> any volunteers? =)
13:46:11 <royce> alinefm, what is our schedule?
13:46:35 <alinefm> https://github.com/kimchi-project/kimchi/wiki/planning-1.3
13:46:43 <alinefm> royce, GA on 09/24
13:46:58 <alinefm> so we need to tests and fix bugs by this sate
13:47:00 <alinefm> *date
13:47:30 <royce> OK, I will take ubuntu
13:48:14 <alinefm> thanks!
13:48:24 <alinefm> vianac, do you want fedora, rhel or opensuse?
13:48:30 <wenwang> alinefm: distro means test on certain OS?
13:48:38 <alinefm> wenwang, yes
13:48:47 <wenwang> I can do the test on reel
13:48:50 <wenwang> rhel
13:48:54 <vianac> alinefm, Fedora
13:49:17 <alinefm> #info royce responsible for test on Ubuntu
13:49:27 <alinefm> #info wenwang responsible for test on RHEL
13:49:36 <alinefm> #info vianac responsible for test on Fedora
13:49:38 <royce> please prepare the matrix:)
13:49:47 <alinefm> #info alinefm responsible for test on openSUSE
13:50:08 <alinefm> #action alinefm update the test matrix on github
13:50:17 <alinefm> royce, I will do by Friday too =)
13:50:32 <royce> thanks, alinefm
13:50:46 <alinefm> wenwang, YuXin, it is much to ask to one of you test on IE?
13:51:09 <wenwang> alinefm: I can do the testing on IE
13:51:18 <royce> I would take look at fixed bugs to cover some regression
13:51:19 <YuXin> i will handle ie
13:51:22 <alinefm> great!
13:51:55 <alinefm> anything else for today?
13:55:12 <alinefm> ok...
13:55:18 <alinefm> thanks everyone for joining!
13:55:25 <alinefm> #endmeeting