{"name":"Kimchi","tagline":"An HTML5 management interface for KVM","body":"Kimchi Project\r\n==============\r\n\r\nKimchi is an HTML5 based management tool for KVM. It is designed to make it as\r\neasy as possible to get started with KVM and create your first guest.\r\n\r\nKimchi runs as a Wok plugin. Wok runs as a daemon on the hypervisor host.\r\n\r\nKimchi manages KVM guests through libvirt. The management interface is accessed\r\nover the web using a browser that supports HTML5.\r\n\r\nBrowser Support\r\n===============\r\n\r\nWok and its plugin can run in any web browser that supports HTML5. The\r\nKimchi community (responsible for Wok project) makes an effort to\r\ntest it with the latest versions of Chrome and Firefox browsers, but the\r\nfollowing list can be used as reference to browser support.\r\n\r\nDesktop Browser Support:\r\n-----------------------\r\n* **Internet Explorer:** Current version\r\n* **Chrome:** Current version\r\n* **Firefox:** Current version\r\n* **Safari:** Current version\r\n* **Opera:** Current version\r\n\r\nMobile Browser Support:\r\n-----------------------\r\n* **Safari iOS:** Current version\r\n* **Android Browser** Current version\r\n\r\n\r\nHypervisor Distro Support\r\n=========================\r\n\r\nKimchi might run on any GNU/Linux distribution that meets the conditions\r\ndescribed on the 'Getting Started' section below.\r\n\r\nThe Kimchi community makes an effort to test it with the latest versions of\r\nFedora, RHEL, OpenSuSe, and Ubuntu.\r\n\r\nGetting Started\r\n===============\r\n\r\nInstall Dependencies\r\n--------------------\r\n\r\n**For fedora and RHEL:**\r\n\r\n     $ sudo yum install wok libvirt-python libvirt gettext-devel \\\r\n                        libvirt-daemon-config-network python-imaging \\\r\n                        qemu-kvm python-ethtool sos python-ipaddr \\\r\n                        nfs-utils iscsi-initiator-utils pyparted \\\r\n                        python-libguestfs libguestfs-tools \\\r\n                        python-websockify novnc spice-html5 \\\r\n                        python-configobj python-magic python-paramiko\r\n\r\n     # If using RHEL, install the following additional packages:\r\n     $ sudo yum install python-unittest2 python-ordereddict\r\n\r\n     # Restart libvirt to allow configuration changes to take effect\r\n     $ sudo service libvirtd restart\r\n\r\n    # These dependencies are only required if you want to run the tests:\r\n    $ sudo yum install pyflakes python-pep8 python-requests python-mock\r\n\r\n\r\n*Note for RHEL users*: Some of the above packages are located in the Red Hat\r\nEPEL repositories.  See\r\n[this FAQ](http://fedoraproject.org/wiki/EPEL#How_can_I_use_these_extra_packages.3F)\r\nfor more information on how to configure your system to access this repository.\r\n\r\nAnd for RHEL7 systems, you also need to subscribe to the \"RHEL Server Optional\"\r\nchannel at RHN Classic or Red Hat Satellite.\r\n\r\n**For Ubuntu (Debian-based):**\r\n\r\n    $ sudo apt-get install wok python-imaging python-configobj websockify \\\r\n                           novnc python-libvirt libvirt-bin nfs-common \\\r\n                           qemu-kvm python-parted python-ethtool sosreport \\\r\n                           xsltproc python-ipaddr python-lxml open-iscsi \\\r\n                           python-guestfs libguestfs-tools spice-html5 \\\r\n                           python-magic python-paramiko gettext \\\r\n\r\n    # These dependencies are only required if you want to run the tests:\r\n    $ sudo apt-get install pep8 pyflakes python-requests python-mock\r\n\r\n**For openSUSE:**\r\n\r\n    $ sudo zypper install wok libvirt-python libvirt gettext-tools \\\r\n                          libvirt-daemon-config-network python-imaging \\\r\n                          kvm python-ethtool python-ipaddr nfs-client \\\r\n                          open-iscsi python-parted python-libguestfs \\\r\n                          python-configobj guestfs-tools python-websockify \\\r\n                          novnc python-magic python-paramiko\r\n\r\n    # These dependencies are only required if you want to run the tests:\r\n    $ sudo zypper install python-pyflakes python-pep8 python-requests python-mock\r\n\r\n*Note for openSUSE users*: Some of the above packages are located in different\r\nopenSUSE repositories. See\r\n[this FAQ](http://download.opensuse.org/repositories/home:GRNET:synnefo/) for\r\npython-parted, [this FAQ](http://download.opensuse.org/repositories/systemsmanagement:/spacewalk/)\r\nfor python-ethtool, and [this FAQ](http://download.opensuse.org/repositories/home:/Simmphonie:/python/) for python-magic to get the correct repository based on your openSUSE version. And\r\n[this FAQ](http://en.opensuse.org/SDB:Add_package_repositories) for more\r\ninformation on how configure your system to access this repository.\r\n\r\nBuild and Install\r\n-----------------\r\n\r\n    Wok:\r\n    $ ./autogen.sh --system\r\n\r\n    $ make\r\n    $ sudo make install   # Optional if running from the source tree\r\n\r\n\r\n    Kimchi:\r\n    $ cd plugins/kimchi\r\n\r\n    For openSUSE 13.2:\r\n    $ ./autogen.sh --with-spice-html5\r\n\r\n    Otherwise:\r\n    $ ./autogen.sh --system\r\n\r\n    $ make\r\n    $ sudo make install   # Optional if running from the source tree\r\n\r\nRun\r\n---\r\n\r\n    $ sudo wokd --host=0.0.0.0\r\n\r\nIf you cannot access Wok, take a look at these 2 points:\r\n\r\n1. Firewall\r\nWok uses by default the ports 8000, 8001 and 64667. To allow incoming connections:\r\n\r\n    For system using firewalld, do:\r\n    sudo firewall-cmd --add-port=8000/tcp --permanent\r\n    sudo firewall-cmd --add-port=8001/tcp --permanent\r\n    sudo firewall-cmd --add-port=64667/tcp --permanent\r\n    sudo firewall-cmd --reload\r\n\r\n    For openSUSE systems, do:\r\n    sudo /sbin/SuSEfirewall2 open EXT TCP 8000\r\n    sudo /sbin/SuSEfirewall2 open EXT TCP 8001\r\n    sudo /sbin/SuSEfirewall2 open EXT TCP 64667\r\n\r\n    For system using iptables, do:\r\n    sudo iptables -A INPUT -p tcp --dport 8000 -j ACCEPT\r\n    sudo iptables -A INPUT -p tcp --dport 8001 -j ACCEPT\r\n    sudo iptables -A INPUT -p tcp --dport 64667 -j ACCEPT\r\n\r\n    Don't forget to correctly save the rules.\r\n\r\n\r\n2. SELinux\r\nAllow httpd_t context for Wok web server:\r\n\r\n    semanage permissive -a httpd_t\r\n\r\n\r\nTest\r\n----\r\n\r\n    $ cd plugins/kimchi\r\n    $ make check-local # check for i18n and formatting errors\r\n    $ sudo make check\r\n\r\nAfter all tests are executed, a summary will be displayed containing any\r\nerrors/failures which might have occurred.\r\n\r\nUsage\r\n-----\r\n\r\nConnect your browser to https://localhost:8001.  You should see a screen like:\r\n\r\n![Wok Login Screen](/docs/kimchi-login.png)\r\n\r\nWok uses PAM to authenticate users so you can log in with the same username\r\nand password that you would use to log in to the machine itself.  Once logged in\r\nyou will see a screen like:\r\n\r\n![Kimchi Guest View](/docs/kimchi-guest.png)\r\n\r\nThis shows you the list of running guests including a live screenshot of\r\nthe guest session.  You can use the action buttons to shutdown the guests\r\nor connect to the display in a new window.\r\n\r\nTo create a new guest, click on the \"+\" button in the upper right corner.\r\nIn Kimchi, all guest creation is done through templates.\r\n\r\nYou can view or modify templates by clicking on the Templates link in the\r\ntop navigation bar.\r\n\r\nThe template screen looks like:\r\n\r\n![Kimchi Template View](/docs/kimchi-templates.png)\r\n\r\nFrom this view, you can change the parameters of a template or create a\r\nnew template using the \"+\" button in the upper right corner.\r\n\r\nTo create a template, you need an ISO on your host or using remote one.\r\nIf you are willing to use your own ISO, please copy it to out of box storage\r\npool (default path is: /var/lib/kimchi/isos).\r\n\r\nKnown Issues\r\n------------\r\n\r\n1. When you are using NFS as storage pool, check the nfs export path permission\r\nis configured as:\r\n    (1) export path need to be squashed as kvm gid and libvirt uid:\r\n        /my_export_path *(all_squash,anongid=<kvm-gid>, anonuid=<libvirt-uid>,rw,sync)\r\n        So that root user can create volume with right user/group.\r\n    (2) Chown of export path as libvirt user, group as kvm group,\r\n        In order to make sure all mapped user can get into the mount point.\r\n\r\nParticipating\r\n-------------\r\n\r\nAll patches are sent through our mailing list hosted by oVirt.  More\r\ninformation can be found at:\r\n\r\nhttps://github.com/kimchi-project/kimchi/wiki/Communications\r\n\r\nPatches should be sent using git-send-email to kimchi-devel@ovirt.org.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}